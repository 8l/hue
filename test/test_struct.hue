bar = struct            # constant <{ i64, %type.S1d* }>
  a = 1
  b = struct            # constant <{ double }>
    c = 2.3

foo = func (n Int)
  struct                # allocates <{ %type.S1x* }>
    x = struct          # allocates <{ i64 }>
      y = n

baz = func (n Int)
  y = n * 2
  struct bob = y        # allocates <{ i64 }>

Math = struct
  factorial = func (n Int) if n == 0 1 else n * factorial n - 1

st1 = baz 20

bar:a    # 1
bar:b:c  # 2.3
st1:bob  # 40

# Func calls from struct traversal.
# Implementation status:
#   - Parser: Complete
#   - Codegen: Incomplete (work pending in Visitor::lookupFunctionSymbols et al)
#Math:factorial 4

foo 123  # <{ <{ i64 }>* }>
st2 = foo 123
st2:x:y  # 123

# Indirect member access
# Implementation status:
#   - Parser: Incomplete
#   - Codegen: Incomplete
#(foo 123):x:y

# TODO: Prototypal inheritance. See https://gist.github.com/2893050
